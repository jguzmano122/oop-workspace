// Program to transform a number from base 10 to base 2
#include <iostream>
#include <string>
using namespace std;

// function signature

string transform (int numberDec){

int modulo = 0;
string numStringRev;
string finalBinString;


while (numberDec > 0 ) {
    // take the number and find its modulo = digit for the binary number
    modulo = numberDec %2; 
    
    cout << "modulo = bin #: " << modulo << endl; // printing binary digit for confirmation
   
    numStringRev = numStringRev + to_string(modulo); // adding digit at the end of string using function from 'string' library to convert int into string
    // divide number substracting modulo until reaching zero 
    numberDec = (numberDec - modulo )/2; 
}

cout << "reversed bin number: " << numStringRev << endl; // printing binary number as generated by the algorithm represented in a string

// reversing result to present fianl bin number
int numRevLenght = numStringRev.length(); // using function length from string library

for (int i = numRevLenght - 1; i >= 0; --i) {
        finalBinString += numStringRev[i];
    }
    cout << "final bin number: " << finalBinString << endl; // printing final binary number represented in a string

    return finalBinString;

}

int main() {

int decimal = 0;
string binaryNum;

    cout <<"Please enter decimal number to transform into binary: ";
    cin >> decimal;

    binaryNum = transform (decimal);









}